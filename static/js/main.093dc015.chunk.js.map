{"version":3,"sources":["components/Context/index.js","components/Stats.js","components/Stopwatch.js","components/Header.js","components/Counter.js","components/Icon.js","components/Player.js","components/AddPlayerForm.js","components/App.js","index.js"],"names":["ScoreboardContext","React","createContext","Provider","Consumer","Stats","context","totalPlayers","length","totalPoints","reduce","total","player","score","className","Stopwatch","state","isRunning","elapsedTime","previousTime","tick","now","Date","setState","prevState","handleStopwatch","handleReset","this","intervalID","setInterval","clearInterval","seconds","Math","floor","onClick","Component","Header","Counter","index","changeScore","Icon","props","viewBox","isHighScore","d","transform","width","height","Player","name","id","removePlayer","PureComponent","AddPlayerForm","playerInput","createRef","handleSubmit","e","preventDefault","addPlayer","current","value","currentTarget","reset","onSubmit","type","ref","placeholder","App","players","handleScoreChange","delta","prevPlayerId","handleAddPlayer","handleRemovePlayer","filter","p","getHighScore","scores","map","highScore","max","toString","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.093dc015.chunk.js","sourcesContent":["import React from 'react';\n\nconst ScoreboardContext = React.createContext();\n\nexport const Provider = ScoreboardContext.Provider;\nexport const Consumer = ScoreboardContext.Consumer;\n\n","import React from 'react';\nimport { Consumer } from './Context';\n\nconst Stats = () => {\n\treturn (\n\t\t<Consumer>\n\t\t\t{context => {\n\t\t\t\tconst totalPlayers = context.length;\n\t\t\t\tconst totalPoints = context.reduce((total, player) => {\n\t\t\t\t\treturn total + player.score;\n\t\t\t\t}, 0);\n\t\t\t\treturn (\n\t\t\t\t\t<table className='stats'>\n\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>Players:</td>\n\t\t\t\t\t\t\t\t<td>{totalPlayers}</td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>Total Points:</td>\n\t\t\t\t\t\t\t\t<td>{totalPoints}</td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t</tbody>\n\t\t\t\t\t</table>\n\t\t\t\t);\n\t\t\t}}\n\t\t</Consumer>\n\t);\n};\n\nexport default Stats;\n","import React, {Component} from 'react';\n\nclass Stopwatch extends Component {\n\n  state = {\n    isRunning: false,\n    elapsedTime: 0,\n    previousTime: 0\n  }\n\n  componentDidMount() {\n    this.intervalID = setInterval(()=> this.tick(), 100)\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.intervalID)\n  }\n  tick = () => {\n    if (this.state.isRunning) {\n      const now = Date.now();\n      this.setState(prevState => ({\n        previousTime: now,\n        elapsedTime: prevState.elapsedTime + (now - this.state.previousTime)\n      }))\n    }\n  }\n  handleStopwatch = () => {\n    this.setState(prevState => ({\n      isRunning: !this.state.isRunning\n    }));\n    if (!this.state.isRunning) {\n      this.setState({ previousTime: Date.now() });\n    }\n  }\n\n  handleReset = () => {\n    this.setState({ elapsedTime: 0 });\n  }\n  render() {\n\n    const seconds = Math.floor(this.state.elapsedTime / 1000);\n\n    return (\n      <div className=\"stopwatch\">\n        <h2>Stopwatch</h2>\n        <span className=\"stopwatch-time\">{seconds}</span>\n        <button onClick={this.handleStopwatch}>{this.state.isRunning ? 'Stop' : 'Start'}</button>\n        <button onClick={this.handleReset}>Reset</button>\n      </div>\n    );\n  }\n}\n\nexport default Stopwatch;","import React from 'react';\nimport Stats from './Stats';\nimport Stopwatch from './Stopwatch';\n\nconst Header = () => {\n\treturn (\n\t\t<header>\n\t\t\t<Stats />\n\t\t\t<h1>Scoreboard</h1>\n\t\t\t<Stopwatch />\n\t\t</header>\n\t);\n};\n\nexport default Header;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Counter = ({ index, score, changeScore }) => {\n\treturn (\n\t\t<div className='counter'>\n\t\t\t<button\n\t\t\t\tclassName='counter-action decrement'\n\t\t\t\tonClick={() => changeScore(index, -1)}\n\t\t\t>\n\t\t\t\t{' '}\n\t\t\t\t-{' '}\n\t\t\t</button>\n\t\t\t<span className='counter-score'>{score}</span>\n\t\t\t<button\n\t\t\t\tclassName='counter-action increment'\n\t\t\t\tonClick={() => changeScore(index, 1)}\n\t\t\t>\n\t\t\t\t{' '}\n\t\t\t\t+{' '}\n\t\t\t</button>\n\t\t</div>\n\t);\n};\n\nCounter.propTypes = {\n  index: PropTypes.number,\n  score: PropTypes.number,\n  changeScore: PropTypes.func\n}\nexport default Counter;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Icon = props => (\n  <svg viewBox='0 0 44 35' className={props.isHighScore ? 'is-high-score' : null}>\n\t\t<path\n\t\t\td='M26.7616 10.6207L21.8192 0L16.9973 10.5603C15.3699 14.1207 10.9096 15.2672 7.77534 12.9741L0 7.24138L6.56986 28.8448H37.0685L43.5781 7.72414L35.7425 13.0948C32.6685 15.2672 28.3288 14.0603 26.7616 10.6207Z'\n\t\t\ttransform='translate(0 0.301727)'\n\t\t/>\n\t\t<rect\n\t\t\twidth='30.4986'\n\t\t\theight='3.07759'\n\t\t\ttransform='translate(6.56987 31.5603)'\n\t\t/>\n\t</svg>)\n\nIcon.propTypes = {\n  isHighScore: PropTypes.bool\n}\n\nexport default Icon;","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport Counter from './Counter';\nimport Icon from './Icon';\n\nclass Player extends PureComponent {\n\n  static propTypes = {\n    changeScore: PropTypes.func,\n    removePlayer: PropTypes.func,\n    name: PropTypes.string.isRequired,\n    score: PropTypes.number.isRequired,\n    id: PropTypes.number,\n    index: PropTypes.number,\n    isHighScore: PropTypes.bool\n  }\n\trender() {\n\t\tconst { name, id, score, index, removePlayer, changeScore } = this.props;\n\t\treturn (\n\t\t\t<div className='player'>\n\t\t\t\t<span className='player-name'>\n\t\t\t\t\t<button className='remove-player' onClick={() => removePlayer(id)}>\n\t\t\t\t\t\tâœ–\n\t\t\t\t\t</button>\n          <Icon isHighScore={ this.props.isHighScore}/>\n\t\t\t\t\t{name}\n\t\t\t\t</span>\n\n\t\t\t\t<Counter score={score} changeScore={changeScore} index={index} />\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Player;\n","import React, { Component } from 'react';\n\nclass AddPlayerForm extends Component {\n  playerInput = React.createRef();\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.addPlayer(this.playerInput.current.value);\n    e.currentTarget.reset();\n  }\n  render() {\n\t\treturn (\n\t\t\t<form onSubmit={this.handleSubmit}>\n\t\t\t\t<input\n          type='text'\n          ref={this.playerInput}\n\t\t\t\t\tplaceholder=\"Enter a player's name\"\n\t\t\t\t/>\n\t\t\t\t<input type='submit' value='Add Player' />\n\t\t\t</form>\n\t\t);\n\t}\n}\n\nexport default AddPlayerForm;\n","import React, { Component } from 'react';\nimport { Provider } from './Context';\nimport Header from './Header';\nimport Player from './Player';\nimport AddPlayerForm from './AddPlayerForm';\n\nclass App extends Component {\n\tstate = {\n\t\tplayers: [\n\t\t\t{\n\t\t\t\tname: 'Steve',\n\t\t\t\tscore: 0,\n\t\t\t\tid: 1,\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Amanda',\n\t\t\t\tscore: 0,\n\t\t\t\tid: 2,\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Emilia',\n\t\t\t\tscore: 0,\n\t\t\t\tid: 3,\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Charlie',\n\t\t\t\tscore: 0,\n\t\t\t\tid: 4,\n\t\t\t},\n\t\t],\n\t};\n\n\thandleScoreChange = (index, delta) => {\n\t\tthis.setState(prevState => ({\n\t\t\tscore: (prevState.players[index].score += delta),\n\t\t}));\n\t};\n\n\t//player id counter\n\tprevPlayerId = 4;\n\n\thandleAddPlayer = name => {\n\t\tthis.setState(prevState => {\n\t\t\treturn {\n\t\t\t\tplayers: [\n\t\t\t\t\t...this.state.players,\n\t\t\t\t\t{\n\t\t\t\t\t\tname,\n\t\t\t\t\t\tscore: 0,\n\t\t\t\t\t\tid: (this.prevPlayerId += 1),\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t};\n\t\t});\n\t};\n\thandleRemovePlayer = id => {\n\t\tthis.setState(prevState => {\n\t\t\treturn {\n\t\t\t\tplayers: prevState.players.filter(p => p.id !== id),\n\t\t\t};\n\t\t});\n  };\n  \n  getHighScore = () => {\n    const scores = this.state.players.map(p => p.score);\n    const highScore = Math.max(...scores);\n    if (highScore) {\n      return highScore;\n    }\n    return null;\n  }\n\n  render() {\n    \n    const highScore = this.getHighScore();\n    \n\t\treturn (\n\t\t\t<Provider value={this.state.players} >\n\t\t\t\t<div className='scoreboard'>\n\t\t\t\t\t<Header />\n\n\t\t\t\t\t{/* Players list */}\n\t\t\t\t\t{this.state.players.map((player, index) => (\n\t\t\t\t\t\t<Player\n\t\t\t\t\t\t\tname={player.name}\n\t\t\t\t\t\t\tscore={player.score}\n\t\t\t\t\t\t\tid={player.id}\n\t\t\t\t\t\t\tkey={player.id.toString()}\n\t\t\t\t\t\t\tindex={index}\n\t\t\t\t\t\t\tchangeScore={this.handleScoreChange}\n\t\t\t\t\t\t\tremovePlayer={this.handleRemovePlayer}\n\t\t\t\t\t\t\tisHighScore={highScore === player.score}\n\t\t\t\t\t\t/>\n\t\t\t\t\t))}\n\n\t\t\t\t\t<AddPlayerForm addPlayer={this.handleAddPlayer} />\n\t\t\t\t</div>\n\t\t\t</Provider>\n\t\t);\n\t}\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './components/App';\nimport './index.css';\n\nReactDOM.render(\n  <App />, \n  document.getElementById('root')\n);\n"],"sourceRoot":""}